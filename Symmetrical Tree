package com.practice.examples.dsa;

public class SymmetricTree {
	public static boolean isSymmetric(Node left, Node right) {
		
		if(left == null && right == null) {
			return true;
		}
		
		if((left == null && right != null) || (left != null && right == null)){
			System.out.println('h');
			return false;
		}

		
		return left.data == right.data && isSymmetric(left.left, right.right) && isSymmetric(left.right, right.left);
	}
	
	
	public static void main(String[] args) {
		
		Node n = new Node(1);
		n.left = new Node(2);
		n.right = new Node(2);
		
		n.left.left = new Node(3);
		n.left.right = new Node(4);
		
		n.right.left = new Node(4);
		n.right.right = new Node(3);
				
		System.out.println(isSymmetric(n.left,n.right));

	}

}

Output: true
